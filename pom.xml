<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.7</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.apache.fineract</groupId>
    <artifactId>stellar-connector</artifactId>
    <version>1.8.3-SNAPSHOT</version>
    <name>stellar-connector</name>
    <description>Stellar Connector for Apache Fineract</description>

    <properties>
        <java.version>17</java.version>
        <fineract.version>0.0.0-0f0010d1-SNAPSHOT</fineract.version>
        <pentaho.version>9.5.0.0-SNAPSHOT</pentaho.version>
        <graal.version>22.2.0</graal.version>
        <eclipselink.version>2.7.10</eclipselink.version>
        <truth.version>1.1.3</truth.version>
        <gson.version>2.10.1</gson.version>        
        <stellar.version>0.38.0</stellar.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <scope>compile</scope>            
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <scope>compile</scope>            
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>compile</scope>            
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <scope>compile</scope>            
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>compile</scope>
	</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>compile</scope>
	</dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>${eclipselink.version}</version>
            <scope>compile</scope>
	</dependency>
        <dependency>
            <groupId>org.apache.fineract</groupId>
		<artifactId>fineract-provider</artifactId>
            <version>${fineract.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.fineract</groupId>
                    <artifactId>fineract-avro-schemas</artifactId>
                </exclusion>
            </exclusions>
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.engine</groupId>
            <artifactId>classic-core</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.engine</groupId>
            <artifactId>classic-extensions</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.engine</groupId>
            <artifactId>classic-extensions-scripting</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.engine</groupId>
            <artifactId>wizard-core</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libbase</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libxml</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libserializer</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>librepository</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libloader</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libformula</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libformat</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libfonts</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.pentaho.reporting.library</groupId>
            <artifactId>libdocbundle</artifactId>
            <version>${pentaho.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js</artifactId>
            <version>${graal.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js-scriptengine</artifactId>
            <version>${graal.version}</version>
            <scope>compile</scope>            
	</dependency>
        <!-- Testing -->
        <dependency>
            <groupId>org.apache.fineract</groupId>
            <artifactId>fineract-client</artifactId>
            <version>${fineract.version}</version>
            <scope>compile</scope>            
	</dependency>
        <dependency>
            <groupId>com.google.truth</groupId>
            <artifactId>truth</artifactId>            
            <version>${truth.version}</version>
            <scope>compile</scope>            
	</dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.stellar</groupId>
            <artifactId>java-stellar-sdk</artifactId>
            <version>${stellar.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit -->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>2.9.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.9.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp-urlconnection -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp-urlconnection</artifactId>
            <version>4.9.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson -->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-gson</artifactId>
            <version>2.9.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx</artifactId>
            <version>17.0.2</version>
            <type>pom</type>
        </dependency>

            
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>        
        <repository>
            <id>oss-sonatype</id>
            <name>oss-sonatype</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
        <repository>
          <snapshots />
          <id>snapshots</id>
          <name>libs-snapshot-local</name>
          <url>https://mifos.jfrog.io/artifactory/libs-snapshot-local</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>        
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>        
        <pluginRepository>
            <snapshots />
            <id>snapshots</id>
            <name>libs-snapshot-local</name>
            <url>https://mifos.jfrog.io/artifactory/libs-snapshot-local</url>
        </pluginRepository>
    </pluginRepositories>
    
    <distributionManagement>
        <repository>
            <id>central</id>
            <name>Mifos Artifactory</name>
            <url>https://mifos.jfrog.io/artifactory/libs-snapshot-local/</url>
        </repository>
    </distributionManagement>

</project>
